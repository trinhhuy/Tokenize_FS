{"remainingRequest":"E:\\Tokenize_FS\\node_modules\\babel-loader\\lib\\index.js!E:\\Tokenize_FS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Tokenize_FS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Tokenize_FS\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Tokenize_FS\\src\\App.vue","mtime":1649494848796},{"path":"E:\\Tokenize_FS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649482682479},{"path":"E:\\Tokenize_FS\\node_modules\\babel-loader\\lib\\index.js","mtime":1649482684000},{"path":"E:\\Tokenize_FS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649482682479},{"path":"E:\\Tokenize_FS\\node_modules\\vue-loader\\lib\\index.js","mtime":1649482685154}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from './client';\nimport config from './config';\nimport io from \"socket.io-client\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'home',\n  components: {},\n\n  data() {\n    return {\n      dataBuy: [],\n      dataSell: []\n    };\n  },\n\n  computed: {\n    totalBuy() {\n      let total = 0;\n      this.dataBuy.forEach(item => {\n        total += Number(item.price) * Number(item.size);\n      });\n      return total.toFixed(8);\n    },\n\n    totalSell() {\n      let total = 0;\n      this.dataSell.forEach(item => {\n        total += Number(item.size);\n      });\n      return total.toFixed(8);\n    }\n\n  },\n\n  mounted() {\n    this.initData();\n    this.initSocket();\n  },\n\n  destroyed() {},\n\n  methods: {\n    async initData() {\n      try {\n        let response = await axios.get('/get-data');\n        let data = response.data.data;\n        this.convertData(data);\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    initSocket() {\n      const socket = io(config.SERVER_URL, {\n        transports: [\"websocket\"]\n      });\n      socket.on(\"connect\", () => {\n        console.log('Connected Socket');\n      });\n      socket.on(\"get-data\", data => {\n        if (data) {\n          this.convertData(JSON.parse(data));\n        }\n      });\n    },\n\n    convertData(data) {\n      if (data) {\n        this.dataBuy = data.buy;\n        this.dataSell = data.sell;\n      } else {\n        this.dataBuy = [];\n        this.dataSell = [];\n      }\n    }\n\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AAEA;AACAA,cADA;AAEAC,gBAFA;;AAGAC;AACA;AACAC,iBADA;AAEAC;AAFA;AAIA,GARA;;AASAC;AACAC;AACA;AACA;AACAC;AACA,OAFA;AAGA;AACA,KAPA;;AAQAC;AACA;AACA;AACAD;AACA,OAFA;AAGA;AACA;;AAdA,GATA;;AAyBAE;AACA;AACA;AACA,GA5BA;;AA6BAC,gBA7BA;;AA8BAC;AACA;AACA;AACA;AACA;AACA;AACA,OAJA,CAIA;AACAC;AACA;AACA,KATA;;AAUAC;AACA;AAAAC;AAAA;AACAC;AACAH;AACA,OAFA;AAGAG;AACA;AACA;AACA;AACA,OAJA;AAKA,KApBA;;AAqBAC;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA;;AA7BA;AA9BA","names":["name","components","data","dataBuy","dataSell","computed","totalBuy","total","totalSell","mounted","destroyed","methods","console","initSocket","transports","socket","convertData"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n    <div id=\"app-component\">\r\n       <div class=\"row\">\r\n           <div class=\"container\" style=\"    background-color: rgb(22, 26, 30);\">\r\n               <div class=\"col-md-12\"></div>\r\n               <div class=\"col-xs-6\">\r\n                   <h2 style=\"text-align: center;\">Buy</h2>\r\n                   <hr>\r\n                   <div>\r\n                       <div class=\"col-xs-6 text-left\"><b>Size</b></div>\r\n                       <div class=\"col-xs-6 text-right\"><b>Bid</b></div>\r\n                   </div>\r\n                   <div v-for=\"(item, index) in dataBuy\" :key=\"index\">\r\n                       <div class=\"col-xs-6 text-left\">{{item.size}}</div>\r\n                       <div class=\"col-xs-6 text-right\" style=\"color: red;\">{{item.price}}</div>\r\n                   </div>\r\n                   <div style=\"font-size: 18px\" v-if=\"dataBuy.length\">\r\n                       <div class=\"col-xs-6 text-left\"><b>Total</b></div>\r\n                       <div class=\"col-xs-6 text-right\"><b>{{totalBuy}}</b></div>\r\n                   </div>\r\n               </div>\r\n               <div class=\"col-xs-6\">\r\n                   <h2 style=\"text-align: center;\">Sell</h2>\r\n                   <hr>\r\n                   <div>\r\n                       <div class=\"col-xs-6 text-left\"><b>Ask</b></div>\r\n                       <div class=\"col-xs-6 text-right\"><b>Size</b></div>\r\n                   </div>\r\n                   <div v-for=\"(item, index) in dataSell\" :key=\"index\">\r\n                       <div class=\"col-xs-6 text-left\" style=\"color: rgb(14, 203, 129);\">{{item.price}}</div>\r\n                       <div class=\"col-xs-6 text-right\">{{item.size}}</div>\r\n                   </div>\r\n                   <div style=\"font-size: 18px\" v-if=\"dataSell.length\">\r\n                       <div class=\"col-xs-6 text-left\"><b>Total</b></div>\r\n                       <div class=\"col-xs-6 text-right\"><b>{{totalSell}}</b></div>\r\n                   </div>\r\n\r\n               </div>\r\n           </div>\r\n       </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n import axios from './client'\r\n import config from './config'\r\n import io from \"socket.io-client\";\r\n import { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'home',\r\n  components: {},\r\n  data () {\r\n    return {\r\n      dataBuy: [],\r\n      dataSell: []\r\n    }\r\n  },\r\n  computed: {\r\n    totalBuy() {\r\n      let total = 0\r\n      this.dataBuy.forEach(item => {\r\n        total += Number(item.price) * Number(item.size)\r\n      })\r\n      return total.toFixed(8)\r\n    },\r\n    totalSell() {\r\n      let total = 0\r\n      this.dataSell.forEach(item => {\r\n        total += Number(item.size)\r\n    })\r\n      return total.toFixed(8)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initData()\r\n    this.initSocket()\r\n  },\r\n  destroyed () {},\r\n  methods: {\r\n    async initData() {\r\n      try {\r\n        let response = await axios.get('/get-data')\r\n        let data = response.data.data\r\n        this.convertData(data)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    },\r\n    initSocket() {\r\n       const socket = io(config.SERVER_URL, { transports: [\"websocket\"] });\r\n       socket.on(\"connect\", () => {\r\n         console.log('Connected Socket')\r\n     });\r\n       socket.on(\"get-data\", (data) => {\r\n         if (data) {\r\n           this.convertData(JSON.parse(data))\r\n         }\r\n     });\r\n    },\r\n    convertData(data) {\r\n       if (data) {\r\n         this.dataBuy = data.buy\r\n         this.dataSell = data.sell\r\n       } else {\r\n         this.dataBuy = []\r\n         this.dataSell = []\r\n       }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped></style>\r\n"]}]}